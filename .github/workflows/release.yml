name: Release Management

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Release type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
          - prerelease
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
      
      - name: Determine version bump
        id: version
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "bump=${{ github.event.inputs.release_type }}" >> $GITHUB_OUTPUT
          else
            # Analyze commit messages to determine version bump
            if git log -1 --pretty=%B | grep -qE "^(feat|feature)(\(.+\))?: .+"; then
              echo "bump=minor" >> $GITHUB_OUTPUT
            elif git log -1 --pretty=%B | grep -qE "^fix(\(.+\))?: .+"; then
              echo "bump=patch" >> $GITHUB_OUTPUT
            elif git log -1 --pretty=%B | grep -qE "^[!:]|BREAKING CHANGE:"; then
              echo "bump=major" >> $GITHUB_OUTPUT
            else
              echo "bump=patch" >> $GITHUB_OUTPUT
            fi
          fi
      
      - name: Bump version
        id: bump_version
        run: |
          npm version ${{ steps.version.outputs.bump }} --no-git-tag-version
          echo "new_version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
      
      - name: Generate changelog
        uses: orhun/git-cliff-action@v2
        id: git-cliff
        with:
          config: .github/cliff.toml
          args: -vv --latest --strip header
        env:
          OUTPUT: CHANGELOG.md
      
      - name: Update CHANGELOG.md
        run: |
          echo -e "# Changelog\n\n" > CHANGELOG_NEW.md
          echo -e "## [v${{ steps.bump_version.outputs.new_version }}] - $(date +'%Y-%m-%d')\n" >> CHANGELOG_NEW.md
          cat "${{ steps.git-cliff.outputs.changelog }}" >> CHANGELOG_NEW.md
          echo -e "\n---\n" >> CHANGELOG_NEW.md
          if [ -f CHANGELOG.md ]; then
            tail -n +2 CHANGELOG.md >> CHANGELOG_NEW.md
          fi
          mv CHANGELOG_NEW.md CHANGELOG.md
      
      - name: Commit changes
        run: |
          git add package.json package-lock.json CHANGELOG.md
          git commit -m "chore(release): v${{ steps.bump_version.outputs.new_version }}"
          git tag -a "v${{ steps.bump_version.outputs.new_version }}" -m "Release v${{ steps.bump_version.outputs.new_version }}"
      
      - name: Push changes
        run: |
          git push origin main
          git push origin "v${{ steps.bump_version.outputs.new_version }}"
      
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.bump_version.outputs.new_version }}
          name: Release v${{ steps.bump_version.outputs.new_version }}
          body: ${{ steps.git-cliff.outputs.content }}
          draft: false
          prerelease: ${{ steps.version.outputs.bump == 'prerelease' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}